# Generated by Django 2.1.2 on 2018-10-31 07:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(default='', max_length=255)),
                ('last_name', models.CharField(default='', max_length=255)),
                ('email', models.CharField(default='', max_length=255, unique=True)),
                ('password', models.CharField(default='', max_length=1000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=400)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='LibraryItemIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issuedAt', models.DateField(auto_now=True)),
                ('returnDate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='LibraryItemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', max_length=200, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='LibrarySubjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', max_length=200, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='biblio.LibrarySubjectType')),
            ],
        ),
        migrations.CreateModel(
            name='AdminAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('biblio.account',),
        ),
        migrations.CreateModel(
            name='LibraryBookItem',
            fields=[
                ('libraryitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblio.LibraryItem')),
                ('ISBNCode', models.BigIntegerField(default='')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('biblio.libraryitem',),
        ),
        migrations.CreateModel(
            name='LibraryBookItemType',
            fields=[
                ('libraryitemtype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblio.LibraryItemType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('biblio.libraryitemtype',),
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('username', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('biblio.account',),
        ),
        migrations.AddField(
            model_name='libraryitemtype',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_biblio.libraryitemtype_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='libraryitemissue',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblio.LibraryItem'),
        ),
        migrations.AddField(
            model_name='libraryitem',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblio.LibraryAuthor'),
        ),
        migrations.AddField(
            model_name='libraryitem',
            name='itemType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblio.LibraryItemType'),
        ),
        migrations.AddField(
            model_name='libraryitem',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_biblio.libraryitem_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='libraryitem',
            name='subjectType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblio.LibrarySubjectType'),
        ),
        migrations.AddField(
            model_name='library',
            name='authors',
            field=models.ManyToManyField(to='biblio.LibraryAuthor'),
        ),
        migrations.AddField(
            model_name='library',
            name='issues',
            field=models.ManyToManyField(to='biblio.LibraryItemIssue'),
        ),
        migrations.AddField(
            model_name='library',
            name='itemTypes',
            field=models.ManyToManyField(to='biblio.LibraryItemType'),
        ),
        migrations.AddField(
            model_name='library',
            name='items',
            field=models.ManyToManyField(to='biblio.LibraryItem'),
        ),
        migrations.AddField(
            model_name='library',
            name='subjectTypes',
            field=models.ManyToManyField(to='biblio.LibrarySubjectType'),
        ),
        migrations.AddField(
            model_name='account',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_biblio.account_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='libraryitemissue',
            name='issuedToUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblio.UserAccount'),
        ),
        migrations.AddField(
            model_name='library',
            name='users',
            field=models.ManyToManyField(to='biblio.UserAccount'),
        ),
        migrations.AddField(
            model_name='adminaccount',
            name='library',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='biblio.Library'),
        ),
    ]
